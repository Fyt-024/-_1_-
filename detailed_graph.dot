strict digraph {
"preprocess";
"feature_engineering";
"linear_regression_train";
"linear_regression_valid";
"linear_regression_test";
"decision_tree_train";
"decision_tree_valid";
"decision_tree_test";
"catboost_train";
"catboost_valid";
"catboost_test";
"xgboost_train";
"xgboost_valid";
"xgboost_test";
"neural_network_train";
"neural_network_valid";
"neural_network_test";
"model_comparison";
"deploy_best_model";
"preprocess" -> "feature_engineering";
"feature_engineering" -> "linear_regression_train";
"feature_engineering" -> "linear_regression_valid";
"feature_engineering" -> "linear_regression_test";
"feature_engineering" -> "decision_tree_train";
"feature_engineering" -> "decision_tree_valid";
"feature_engineering" -> "decision_tree_test";
"feature_engineering" -> "catboost_train";
"feature_engineering" -> "catboost_valid";
"feature_engineering" -> "catboost_test";
"feature_engineering" -> "xgboost_train";
"feature_engineering" -> "xgboost_valid";
"feature_engineering" -> "xgboost_test";
"feature_engineering" -> "neural_network_train";
"feature_engineering" -> "neural_network_valid";
"feature_engineering" -> "neural_network_test";
"linear_regression_train" -> "linear_regression_valid";
"linear_regression_train" -> "linear_regression_test";
"linear_regression_valid" -> "model_comparison";
"linear_regression_test" -> "model_comparison";
"decision_tree_train" -> "decision_tree_valid";
"decision_tree_train" -> "decision_tree_test";
"decision_tree_valid" -> "model_comparison";
"decision_tree_test" -> "model_comparison";
"catboost_train" -> "catboost_valid";
"catboost_train" -> "catboost_test";
"catboost_valid" -> "model_comparison";
"catboost_test" -> "model_comparison";
"xgboost_train" -> "xgboost_valid";
"xgboost_train" -> "xgboost_test";
"xgboost_train" -> "deploy_best_model";
"xgboost_valid" -> "model_comparison";
"xgboost_test" -> "model_comparison";
"neural_network_train" -> "neural_network_valid";
"neural_network_train" -> "neural_network_test";
"neural_network_valid" -> "model_comparison";
"neural_network_test" -> "model_comparison";
"model_comparison" -> "deploy_best_model";
}

